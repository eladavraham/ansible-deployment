---
ec2_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
ec2_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
ec2_region: "{{ lookup('env', 'AWS_DEFAULT_REGION') }}"
ec2_region_az1: "{{ lookup('env', 'AWS_DEFAULT_AZ1') }}"
ec2_region_az2: "{{ lookup('env', 'AWS_DEFAULT_AZ2') }}"
ec2_region_az3: "{{ lookup('env', 'AWS_DEFAULT_AZ3') }}"
ec2_region_az4: "{{ lookup('env', 'AWS_DEFAULT_AZ4') }}"

# parametric services must have template file specified
# order of services defines starting order via fleet. Services are stopped in reverse order.
core_services:
  - {name: 'skydns.service'}
  - {name: 'registrator.service'}
  - {name: 'rabbitmq.data@master.service', template: 'rabbitmq.data@.service'}
  - {name: 'rabbitmq@master.service', template: 'rabbitmq@.service'}
  - {name: 'influxdb.data.service'}
  - {name: 'influxdb.service'}

gaia_services:
  - {name: 'grafana.service'}
  - {name: 'events-indexer.service'}
  - {name: 'security-token-service.service'}
  - {name: 'metrics-gateway-service.service'}
  - {name: 'result-upload-service.service'}
#  - {name: 'sample-weather-processor.service'}
  - {name: 'circleci-tests-processor.service'}
  - {name: 'jenkins-tests-processor.service'}
  - {name: 'alm-issue-change-processor.service'}
  - {name: 'haproxy.service'}

all_services: "{{ core_services + gaia_services }}"
