# these tasks generate ssh.config for deployment from localhost to amazon
- set_fact:
    work_dir: "{{ lookup('env', 'PWD') }}"
# detect bastion information
- name: Detect Bastion info
  shell: "aws ec2 describe-instances --filters 'Name=instance-state-name,Values=running' 'Name=tag:Name,Values={{ bastion_instance_tags.Name }}' 'Name=tag:group,Values={{ bastion_instance_tags.group }}' 'Name=tag:env,Values={{ bastion_instance_tags.env }}' 'Name=tag:type,Values={{ bastion_instance_tags.type }}'"
  register: bastion_info_out
- set_fact:
    bastion_info_json: "{{ bastion_info_out.stdout | from_json }}"
- set_fact:
    bastion_hostname: "{{ bastion_info_json.Reservations[0].Instances[0].PublicDnsName }}"

# detect coreos cluser information
- name: Detect CoreOS cluster info
  shell: "aws ec2 describe-instances --filters 'Name=tag:Name,Values={{ coreos_instance_tags.Name }}' 'Name=tag:group,Values={{ coreos_instance_tags.group }}' 'Name=tag:env,Values={{ coreos_instance_tags.env }}' 'Name=tag:type,Values={{ coreos_instance_tags.type }}'"
  register: coreos_info_out
- set_fact:
    coreos_ips: "{{ coreos_info_out.stdout | from_json | ec2_instance_info('PrivateIpAddress') | join(' ') }}"

# generate ssh_config from template
- name: generate ssh_config
  template: src='ssh_config.j2' dest='{{ work_dir }}/ssh_config'
